{"version":3,"sources":["ui-load.js","setnganimate.js","ui-butterbar.js","ui-focus.js","ui-fullscreen.js","ui-jq.js","ui-module.js","ui-nav.js","ui-scroll.js","ui-shift.js","ui-toggleclass.js","autocomplete.js"],"names":[],"mappingslBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"all.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * 0.1.1\r\n * Deferred load js/css file, used for ui-jq.js and Lazy Loading.\r\n *\r\n * @ flatfull.com All Rights Reserved.\r\n * Author url: http://themeforest.net/user/flatfull\r\n */\r\n\r\nangular.module('ui.load', [])\r\n    .service('uiLoad', ['$document', '$q', '$timeout', function ($document, $q, $timeout) {\r\n\r\n        var loaded = [];\r\n        var promise = false;\r\n        var deferred = $q.defer();\r\n\r\n        /**\r\n         * Chain loads the given sources\r\n         * @param srcs array, script or css\r\n         * @returns {*} Promise that will be resolved once the sources has been loaded.\r\n         */\r\n        this.load = function (srcs) {\r\n            srcs = angular.isArray(srcs) ? srcs : srcs.split(/\\s+/);\r\n            var self = this;\r\n            if(!promise){\r\n                promise = deferred.promise;\r\n            }\r\n            angular.forEach(srcs, function(src) {\r\n                promise = promise.then( function(){\r\n                    return src.indexOf('.css') >=0 ? self.loadCSS(src) : self.loadScript(src);\r\n                } );\r\n            });\r\n            deferred.resolve();\r\n            return promise;\r\n        }\r\n\r\n        /**\r\n         * Dynamically loads the given script\r\n         * @param src The url of the script to load dynamically\r\n         * @returns {*} Promise that will be resolved once the script has been loaded.\r\n         */\r\n        this.loadScript = function (src) {\r\n            if(loaded[src]) return loaded[src].promise;\r\n\r\n            var deferred = $q.defer();\r\n            var script = $document[0].createElement('script');\r\n            script.src = src;\r\n            script.onload = function (e) {\r\n                $timeout(function () {\r\n                    deferred.resolve(e);\r\n                });\r\n            };\r\n            script.onerror = function (e) {\r\n                $timeout(function () {\r\n                    deferred.reject(e);\r\n                });\r\n            };\r\n            $document[0].body.appendChild(script);\r\n            loaded[src] = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        /**\r\n         * Dynamically loads the given CSS file\r\n         * @param href The url of the CSS to load dynamically\r\n         * @returns {*} Promise that will be resolved once the CSS file has been loaded.\r\n         */\r\n        this.loadCSS = function (href) {\r\n            if(loaded[href]) return loaded[href].promise;\r\n\r\n            var deferred = $q.defer();\r\n            var style = $document[0].createElement('link');\r\n            style.rel = 'stylesheet';\r\n            style.type = 'text/css';\r\n            style.href = href;\r\n            style.onload = function (e) {\r\n                $timeout(function () {\r\n                    deferred.resolve(e);\r\n                });\r\n            };\r\n            style.onerror = function (e) {\r\n                $timeout(function () {\r\n                    deferred.reject(e);\r\n                });\r\n            };\r\n            $document[0].head.appendChild(style);\r\n            loaded[href] = deferred;\r\n\r\n            return deferred.promise;\r\n        };\r\n    }]);","angular.module('app')\r\n  .directive('setNgAnimate', ['$animate', function ($animate) {\r\n    return {\r\n        link: function ($scope, $element, $attrs) {\r\n            $scope.$watch( function() {\r\n                return $scope.$eval($attrs.setNgAnimate, $scope);\r\n            }, function(valnew, valold){\r\n                $animate.enabled(!!valnew, $element);\r\n            });\r\n        }\r\n    };\r\n  }]);","angular.module('app')\r\n  .directive('uiButterbar', ['$rootScope', '$anchorScroll', function($rootScope, $anchorScroll) {\r\n     return {\r\n      restrict: 'AC',\r\n      template:'<span class=\"bar\"></span>',\r\n      link: function(scope, el, attrs) {        \r\n        el.addClass('butterbar hide');\r\n        scope.$on('$stateChangeStart', function(event) {\r\n          $anchorScroll();\r\n          el.removeClass('hide').addClass('active');\r\n        });\r\n        scope.$on('$stateChangeSuccess', function( event, toState, toParams, fromState ) {\r\n          event.targetScope.$watch('$viewContentLoaded', function(){\r\n            el.addClass('hide').removeClass('active');\r\n          })\r\n        });\r\n      }\r\n     };\r\n  }]);","angular.module('app')\r\n  .directive('uiFocus', function($timeout, $parse) {\r\n    return {\r\n      link: function(scope, element, attr) {\r\n        var model = $parse(attr.uiFocus);\r\n        scope.$watch(model, function(value) {\r\n          if(value === true) {\r\n            $timeout(function() {\r\n              element[0].focus();\r\n            });\r\n          }\r\n        });\r\n        element.bind('blur', function() {\r\n           scope.$apply(model.assign(scope, false));\r\n        });\r\n      }\r\n    };\r\n  });"," angular.module('app')\r\n  .directive('uiFullscreen', ['uiLoad', 'JQ_CONFIG', '$document', '$window', function(uiLoad, JQ_CONFIG, $document, $window) {\r\n    return {\r\n      restrict: 'AC',\r\n      template:'<i class=\"fa fa-expand fa-fw text\"></i><i class=\"fa fa-compress fa-fw text-active\"></i>',\r\n      link: function(scope, el, attr) {\r\n        el.addClass('hide');\r\n        uiLoad.load(JQ_CONFIG.screenfull).then(function(){\r\n          // disable on ie11\r\n          if (screenfull.enabled && !navigator.userAgent.match(/Trident.*rv:11\\./)) {\r\n            el.removeClass('hide');\r\n          }\r\n          el.on('click', function(){\r\n            var target;\r\n            attr.target && ( target = $(attr.target)[0] );            \r\n            screenfull.toggle(target);\r\n          });\r\n          $document.on(screenfull.raw.fullscreenchange, function () {\r\n            if(screenfull.isFullscreen){\r\n              el.addClass('active');\r\n            }else{\r\n              el.removeClass('active');\r\n            }\r\n          });\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n","'use strict';\r\n\r\n/**\r\n * 0.1.1\r\n * General-purpose jQuery wrapper. Simply pass the plugin name as the expression.\r\n *\r\n * It is possible to specify a default set of parameters for each jQuery plugin.\r\n * Under the jq key, namespace each plugin by that which will be passed to ui-jq.\r\n * Unfortunately, at this time you can only pre-define the first parameter.\r\n * @example { jq : { datepicker : { showOn:'click' } } }\r\n *\r\n * @param ui-jq {string} The $elm.[pluginName]() to call.\r\n * @param [ui-options] {mixed} Expression to be evaluated and passed as options to the function\r\n *     Multiple parameters can be separated by commas\r\n * @param [ui-refresh] {expression} Watch expression and refire plugin on changes\r\n *\r\n * @example <input ui-jq=\"datepicker\" ui-options=\"{showOn:'click'},secondParameter,thirdParameter\" ui-refresh=\"iChange\">\r\n */\r\nangular.module('ui.jq', ['ui.load']).\r\n    value('uiJqConfig', {}).\r\n    directive('uiJq', ['uiJqConfig', 'JQ_CONFIG', 'uiLoad', '$timeout', function uiJqInjectingFunction(uiJqConfig, JQ_CONFIG, uiLoad, $timeout) {\r\n\r\n        return {\r\n            restrict: 'A',\r\n            compile: function uiJqCompilingFunction(tElm, tAttrs) {\r\n\r\n                if (!angular.isFunction(tElm[tAttrs.uiJq]) && !JQ_CONFIG[tAttrs.uiJq]) {\r\n                    throw new Error('ui-jq: The \"' + tAttrs.uiJq + '\" function does not exist');\r\n                }\r\n                var options = uiJqConfig && uiJqConfig[tAttrs.uiJq];\r\n\r\n                return function uiJqLinkingFunction(scope, elm, attrs) {\r\n\r\n                    function getOptions(){\r\n                        var linkOptions = [];\r\n\r\n                        // If ui-options are passed, merge (or override) them onto global defaults and pass to the jQuery method\r\n                        if (attrs.uiOptions) {\r\n                            linkOptions = scope.$eval('[' + attrs.uiOptions + ']');\r\n                            if (angular.isObject(options) && angular.isObject(linkOptions[0])) {\r\n                                linkOptions[0] = angular.extend({}, options, linkOptions[0]);\r\n                            }\r\n                        } else if (options) {\r\n                            linkOptions = [options];\r\n                        }\r\n                        return linkOptions;\r\n                    }\r\n\r\n                    // If change compatibility is enabled, the form input's \"change\" event will trigger an \"input\" event\r\n                    if (attrs.ngModel && elm.is('select,input,textarea')) {\r\n                        elm.bind('change', function() {\r\n                            elm.trigger('input');\r\n                        });\r\n                    }\r\n\r\n                    // Call jQuery method and pass relevant options\r\n                    function callPlugin() {\r\n                        $timeout(function() {\r\n                            var result = elm[attrs.uiJq].apply(elm, getOptions());\r\n                            if (attrs.uiCallback && window[attrs.uiCallback]) {\r\n                                window[attrs.uiCallback](result);\r\n                            }\r\n                        }, 0, false);\r\n                    }\r\n\r\n                    function refresh(){\r\n                        // If ui-refresh is used, re-fire the the method upon every change\r\n                        if (attrs.uiRefresh) {\r\n                            scope.$watch(attrs.uiRefresh, function() {\r\n                                callPlugin();\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    if ( JQ_CONFIG[attrs.uiJq] ) {\r\n                        uiLoad.load(JQ_CONFIG[attrs.uiJq]).then(function() {\r\n                            callPlugin();\r\n                            refresh();\r\n                        }).catch(function() {\r\n\r\n                        });\r\n                    } else {\r\n                        callPlugin();\r\n                        refresh();\r\n                    }\r\n                };\r\n            }\r\n        };\r\n    }]);","angular.module('app')\r\n  .directive('uiModule', ['MODULE_CONFIG','uiLoad', '$compile', function(MODULE_CONFIG, uiLoad, $compile) {\r\n    return {\r\n      restrict: 'A',\r\n      compile: function (el, attrs) {\r\n        var contents = el.contents().clone();\r\n        return function(scope, el, attrs){\r\n          el.contents().remove();\r\n          uiLoad.load(MODULE_CONFIG[attrs.uiModule])\r\n          .then(function(){\r\n            $compile(contents)(scope, function(clonedElement, scope) {\r\n              el.append(clonedElement);\r\n            });\r\n          });\r\n        }\r\n      }\r\n    };\r\n  }]);","angular.module('app')\r\n  .directive('uiNav', ['$timeout', function($timeout) {\r\n    return {\r\n      restrict: 'AC',\r\n      link: function(scope, el, attr) {\r\n        var _window = $(window), \r\n        _mb = 768, \r\n        wrap = $('.app-aside'), \r\n        next, \r\n        backdrop = '.dropdown-backdrop';\r\n        // unfolded\r\n        el.on('click', 'a', function(e) {\r\n          next && next.trigger('mouseleave.nav');\r\n          var _this = $(this);\r\n          _this.parent().siblings( \".active\" ).toggleClass('active');\r\n          _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\r\n          // mobile\r\n          _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\r\n        });\r\n\r\n        // folded & fixed\r\n        el.on('mouseenter', 'a', function(e){\r\n          next && next.trigger('mouseleave.nav');\r\n          $('> .nav', wrap).remove();\r\n          if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\r\n          var _this = $(e.target)\r\n          , top\r\n          , w_h = $(window).height()\r\n          , offset = 50\r\n          , min = 150;\r\n\r\n          !_this.is('a') && (_this = _this.closest('a'));\r\n          if( _this.next().is('ul') ){\r\n             next = _this.next();\r\n          }else{\r\n            return;\r\n          }\r\n         \r\n          _this.parent().addClass('active');\r\n          top = _this.parent().position().top + offset;\r\n          next.css('top', top);\r\n          if( top + next.height() > w_h ){\r\n            next.css('bottom', 0);\r\n          }\r\n          if(top + min > w_h){\r\n            next.css('bottom', w_h - top - offset).css('top', 'auto');\r\n          }\r\n          next.appendTo(wrap);\r\n\r\n          next.on('mouseleave.nav', function(e){\r\n            $(backdrop).remove();\r\n            next.appendTo(_this.parent());\r\n            next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\r\n            _this.parent().removeClass('active');\r\n          });\r\n\r\n          $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\r\n            next && next.trigger('mouseleave.nav');\r\n          });\r\n\r\n        });\r\n\r\n        wrap.on('mouseleave', function(e){\r\n          next && next.trigger('mouseleave.nav');\r\n          $('> .nav', wrap).remove();\r\n        });\r\n      }\r\n    };\r\n  }]);","angular.module('app')\r\n  .directive('uiScrollTo', ['$location', '$anchorScroll', function($location, $anchorScroll) {\r\n    return {\r\n      restrict: 'AC',\r\n      link: function(scope, el, attr) {\r\n        el.on('click', function(e) {\r\n          $location.hash(attr.uiScrollTo);\r\n          $anchorScroll();\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n","angular.module('app')\r\n  .directive('uiShift', ['$timeout', function($timeout) {\r\n    return {\r\n      restrict: 'A',\r\n      link: function(scope, el, attr) {\r\n        // get the $prev or $parent of this el\r\n        var _el = $(el),\r\n            _window = $(window),\r\n            prev = _el.prev(),\r\n            parent,\r\n            width = _window.width()\r\n            ;\r\n\r\n        !prev.length && (parent = _el.parent());\r\n        \r\n        function sm(){\r\n          $timeout(function () {\r\n            var method = attr.uiShift;\r\n            var target = attr.target;\r\n            _el.hasClass('in') || _el[method](target).addClass('in');\r\n          });\r\n        }\r\n        \r\n        function md(){\r\n          parent && parent['prepend'](el);\r\n          !parent && _el['insertAfter'](prev);\r\n          _el.removeClass('in');\r\n        }\r\n\r\n        (width < 768 && sm()) || md();\r\n\r\n        _window.resize(function() {\r\n          if(width !== _window.width()){\r\n            $timeout(function(){\r\n              (_window.width() < 768 && sm()) || md();\r\n              width = _window.width();\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }]);","angular.module('app')\r\n  .directive('uiToggleClass', ['$timeout', '$document', function($timeout, $document) {\r\n    return {\r\n      restrict: 'AC',\r\n      link: function(scope, el, attr) {\r\n        el.on('click', function(e) {\r\n          e.preventDefault();\r\n          var classes = attr.uiToggleClass.split(','),\r\n              targets = (attr.target && attr.target.split(',')) || Array(el),\r\n              key = 0;\r\n          angular.forEach(classes, function( _class ) {\r\n            var target = targets[(targets.length && key)];            \r\n            ( _class.indexOf( '*' ) !== -1 ) && magic(_class, target);\r\n            $( target ).toggleClass(_class);\r\n            key ++;\r\n          });\r\n          $(el).toggleClass('active');\r\n\r\n          function magic(_class, target){\r\n            var patt = new RegExp( '\\\\s' + \r\n                _class.\r\n                  replace( /\\*/g, '[A-Za-z0-9-_]+' ).\r\n                  split( ' ' ).\r\n                  join( '\\\\s|\\\\s' ) + \r\n                '\\\\s', 'g' );\r\n            var cn = ' ' + $(target)[0].className + ' ';\r\n            while ( patt.test( cn ) ) {\r\n              cn = cn.replace( patt, ' ' );\r\n            }\r\n            $(target)[0].className = $.trim( cn );\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }]);","(function($) {\r\n    $.fn.autocomplete = function (option) {\r\n        return this.each(function () {\r\n            this.timer = null;\r\n            this.items = new Array();\r\n\r\n            $.extend(this, option);\r\n\r\n            $(this).attr('autocomplete', 'off');\r\n\r\n            // Focus\r\n            $(this).on('focus', function () {\r\n                this.request();\r\n            });\r\n\r\n            // Blur\r\n            $(this).on('blur', function () {\r\n                setTimeout(function (object) {\r\n                    object.hide();\r\n                }, 200, this);\r\n            });\r\n\r\n            // Keydown\r\n            $(this).on('keydown', function (event) {\r\n                switch (event.keyCode) {\r\n                    case 27: // escape\r\n                        this.hide();\r\n                        break;\r\n                    default:\r\n                        this.request();\r\n                        break;\r\n                }\r\n            });\r\n\r\n            // Click\r\n            this.click = function (event) {\r\n                event.preventDefault();\r\n\r\n                var value = $(event.target).parent().attr('data-value');\r\n\r\n                if (value && this.items[value]) {\r\n                    this.select(this.items[value]);\r\n                }\r\n            }\r\n\r\n            // Show\r\n            this.show = function () {\r\n                var pos = $(this).position();\r\n\r\n                $(this).siblings('ul.dropdown-menu').css({\r\n                    top: pos.top + $(this).outerHeight(),\r\n                    left: pos.left\r\n                });\r\n\r\n                $(this).siblings('ul.dropdown-menu').show();\r\n            }\r\n\r\n            // Hide\r\n            this.hide = function () {\r\n                $(this).siblings('ul.dropdown-menu').hide();\r\n            }\r\n\r\n            // Request\r\n            this.request = function () {\r\n                clearTimeout(this.timer);\r\n\r\n                this.timer = setTimeout(function (object) {\r\n                    object.source($(object).val(), $.proxy(object.response, object));\r\n                }, 200, this);\r\n            }\r\n\r\n            // Response\r\n            this.response = function (json) {\r\n                var html = '';\r\n\r\n                if (json.length) {\r\n                    for (var i = 0; i < json.length; i++) {\r\n                        this.items[json[i]['value']] = json[i];\r\n                    }\r\n\r\n                    for (var i = 0; i < json.length; i++) {\r\n                        if (!json[i]['category']) {\r\n                            html += '<li data-value=\"' + json[i]['value'] + '\"><a href=\"#\">' + json[i]['label'] + '</a></li>';\r\n                        }\r\n                    }\r\n\r\n                    // Get all the ones with a categories\r\n                    var category = new Array();\r\n\r\n                    for (var i = 0; i < json.length; i++) {\r\n                        if (json[i]['category']) {\r\n                            if (!category[json[i]['category']]) {\r\n                                category[json[i]['category']] = new Array();\r\n                                category[json[i]['category']]['name'] = json[i]['category'];\r\n                                category[json[i]['category']]['item'] = new Array();\r\n                            }\r\n\r\n                            category[json[i]['category']]['item'].push(json[i]);\r\n                        }\r\n                    }\r\n\r\n                    for (i in category) {\r\n                        html += '<li class=\"dropdown-header\">' + category[i]['name'] + '</li>';\r\n\r\n                        for (j = 0; j < category[i]['item'].length; j++) {\r\n                            html += '<li data-value=\"' + category[i]['item'][j]['value'] + '\"><a href=\"#\">&nbsp;&nbsp;&nbsp;' + category[i]['item'][j]['label'] + '</a></li>';\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (html) {\r\n                    this.show();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n\r\n                $(this).siblings('ul.dropdown-menu').html(html);\r\n            }\r\n\r\n            $(this).after('<ul class=\"dropdown-menu\"></ul>');\r\n            $(this).siblings('ul.dropdown-menu').delegate('a', 'click', $.proxy(this.click, this));\r\n\r\n        });\r\n    }\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}